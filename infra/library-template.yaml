AWSTemplateFormatVersion: "2010-09-09"
Description: Test cfn Template
Parameters:
  KeyPair:
    Description: Select KeyPair Name.
    Type: AWS::EC2::KeyPair::KeyName
#  DBUser:
#    Type: String
#  DBPassword:
#    Type: String
Resources:
  cfnVpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "192.168.0.0/16"
      Tags:
        - Key: "Name"
          Value: "library-vpc"
  cfnPublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "192.168.1.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "library-public-subnet"
      VpcId:
        Ref: cfnVpc
  cfnPrivateSubnet1a:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "192.168.2.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "library-private-subnet-1a"
      AvailabilityZone: "ap-northeast-1a"
      VpcId:
        Ref: cfnVpc
  cfnPrivateSubnet1c:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "192.168.3.0/24"
      MapPublicIpOnLaunch: true
      AvailabilityZone: "ap-northeast-1c"
      Tags:
        - Key: "Name"
          Value: "library-private-subnet-1c"
      VpcId:
        Ref: cfnVpc
  cfnInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: "Name"
          Value: "library-igw"
  cfnAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: cfnVpc
      InternetGatewayId:
        Ref: cfnInternetGateway
  cfnRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: "Name"
          Value: "library-rt"
      VpcId:
        Ref: cfnVpc
  cfnRoute:
    Type: AWS::EC2::Route
    DependsOn: cfnInternetGateway
    Properties:
      RouteTableId:
        Ref: cfnRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: cfnInternetGateway
  cfnPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: cfnPublicSubnet
      RouteTableId:
        Ref: cfnRouteTable
  cfnEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-0064e711cbc7a825e"
      InstanceType: "t2.micro"
      SubnetId:
        Ref: cfnPublicSubnet
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeType: "gp2"
            VolumeSize: 8
      Tags:
        - Key: "Name"
          Value: "library-ap"
      SecurityGroupIds:
        - Ref: cfnSecurityGroup
      KeyName:
        Ref: KeyPair
  cfnSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "cfnSecurityGroup"
      VpcId:
        Ref: cfnVpc
      Tags:
        - Key: "Name"
          Value: "library-ssh-sg"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: 0.0.0.0/0
#  cfnDbSecurityGroup:
#    Type: "AWS::EC2::SecurityGroup"
#    Properties:
#      GroupDescription: "cfnSecurityGroup for Db"
#      VpcId:
#        Ref: cfnVpc
#      Tags:
#        - Key: "Name"
#          Value: "library-db-sg"
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: "5432"
#          ToPort: "5432"
#          CidrIp: 0.0.0.0/0
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref cfnEC2Instance
#  cfnRdsInstance:
#    Type: AWS::RDS::DBInstance
#    Properties:
#      DBInstanceClass: "db.t2.micro"
#      DBName: "librarydb"
#      MultiAZ: false
#      PubliclyAccessible: false
#      AllocatedStorage: 20
#      Engine: POSTGRES
#      MasterUserPassword:
#        Ref: DBPassword
#      MasterUsername:
#        Ref: DBUser
#      DBSecurityGroups:
#        - Ref: SecurityGroupForPrivateSubnet
#      DBSubnetGroupName:
#        Ref: PrivateSubnetGroup
#      Tags:
#        - Key: Name
#          Value: "library database"
  # サブネットグループ
#  PrivateSubnetGroup:
#    Type: "AWS::RDS::DBSubnetGroup"
#    Properties:
#      DBSubnetGroupName: "PrivateSubnetGroup"
#      DBSubnetGroupDescription: "Private SubnetGroup"
#      SubnetIds:
#        - Ref: cfnPrivateSubnet1a
#        - Ref: cfnPrivateSubnet1c
  # プライベートサブネット用のセキュリティグループ
#  SecurityGroupForPrivateSubnet:
#    Type: "AWS::RDS::DBSecurityGroup"
#    Properties:
#      EC2VpcId:
#        Ref: cfnVpc
#      DBSecurityGroupIngress:
#        - EC2SecurityGroupId:
#            Ref: cfnDbSecurityGroup
#      GroupDescription: "SecurityGroup For PrivateSubnet"
#